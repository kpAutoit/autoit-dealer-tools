var t;
! function(t) {
    t[t.INITIAL = 0] = "INITIAL", t[t.LOADING = 1] = "LOADING", t[t.READY = 2] = "READY", t[t.PLAYING = 3] = "PLAYING", t[t.PAUSED = 4] = "PAUSED", t[t.STOPPED = 5] = "STOPPED", t[t.FINISHED = 6] = "FINISHED"
}(t || (t = {}));
var e, i, n = function() {
    function t() {
        this._initialized = !1
    }
    return t.prototype.Initialize = function() {
        this._initialized
    }, t.prototype.SetInitialized = function() {
        this._initialized = !0
    }, t.prototype.GetInitialized = function() {
        return this._initialized
    }, t
}();

function s(t, i, n) {
    if (console) {
        switch (i) {
            case e.INFO:
                "blue";
                break;
            case e.WARNING:
                "orange";
                break;
            case e.ERROR:
                "red";
                break;
            case e.DEBUG:
                "lightgray"
        }
    }
}! function(t) {
    t[t.WARNING = 0] = "WARNING", t[t.INFO = 1] = "INFO", t[t.ERROR = 2] = "ERROR", t[t.DEBUG = 3] = "DEBUG"
}(e || (e = {})),
    function(t) {
        t[t.INITIAL = 0] = "INITIAL", t[t.TRIGGERED = 1] = "TRIGGERED", t[t.DONE = 2] = "DONE"
    }(i || (i = {}));
var o, a = function() {
        function t() {}
        return t.GetUniqueRandomNubmer = function(t, e) {
            if (void 0 === e && (e = -1), t < 1) return t;
            var i = Math.floor(Math.random() * t);
            return i === e ? this.GetUniqueRandomNubmer(t, i) : i
        }, t
    }(),
    r = this && this.__extends || function() {
        var t = function(e, i) {
            return (t = Object.setPrototypeOf || {
                    __proto__: []
                }
                instanceof Array && function(t, e) {
                    t.__proto__ = e
                } || function(t, e) {
                    for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i])
                })(e, i)
        };
        return function(e, i) {
            function n() {
                this.constructor = e
            }
            t(e, i), e.prototype = null === i ? Object.create(i) : (n.prototype = i.prototype, new n)
        }
    }(),
    l = function(n) {
        function o(t) {
            var e = n.call(this) || this;
            e.params = t, e.params.options || (e.params.options = {
                Background: !1
            });
            var s = a.GetUniqueRandomNubmer(150).toString();
            return e._debugConsoleColor = "rgb(255, " + s + ", " + s + ")", e._playerId = e.GetRandomPlayerId(), e._autoplayed = i.INITIAL, e.params.container.attr("id", e._playerId), e
        }
        return r(o, n), o.prototype.Initialize = function() {
            var t = this;
            n.prototype.Initialize.call(this);
            var i, o = this.params.url.match(/v=(.+)$/i);
            if (this.params.url && o && 0 !== o.length) {
                i = o[1];
                var a = window.location.protocol + (window.location.port && 80 !== parseInt(window.location.port) ? window.location.port : "") + "//" + window.location.host;
                this.playerInstance = new YT.Player(this.params.container.attr("id"), {
                    height: this.params.container.width(),
                    width: this.params.container.height(),
                    videoId: i,
                    playerVars: {
                        autoplay: 0,
                        loop: this.params.options.Background ? 1 : 0,
                        origin: a,
                        playsinline: 1,
                        controls: 0,
                        disablekb: 1,
                        autohide: 1,
                        enablejsapi: 1,
                        modestbranding: 1,
                        iv_load_policy: 3,
                        rel: 0,
                        fs: 0,
                        hl: "da",
                        ecver: 2,
                        widget_referrer: window.location.href,
                        wmode: "transparent"
                    },
                    events: {
                        onReady: function() {
                            return t.OnReady()
                        },
                        onStateChange: function() {
                            return t.OnChanged()
                        },
                        onError: function(e) {
                            return t.OnError(e.toString())
                        }
                    }
                }), n.prototype.SetInitialized.call(this)
            } else s(this._playerId + ": %cCould not parse a valid YouTube video ID.", e.WARNING, this._debugConsoleColor)
        }, o.prototype.OnStarted = function() {
            this.params.eventListeners && this.params.eventListeners.OnStarted && this.params.eventListeners.OnStarted()
        }, o.prototype.OnChanged = function(t) {
            var e = this;
            if (t) switch (t.data) {
                case YT.PlayerState.PLAYING:
                    this.OnStarted();
                case YT.PlayerState.CUED:
                case YT.PlayerState.BUFFERING:
                    this.OnLoading();
                case YT.PlayerState.PAUSED:
                    this.OnPaused();
                case YT.PlayerState.ENDED:
                    this.OnFinished()
            }
            this._autoplayed === i.TRIGGERED && (this._autoplayPauseTimeout && clearTimeout(this._autoplayPauseTimeout), this._autoplayPauseTimeout = setTimeout(function() {
                e._autoplayed = i.DONE, e.params.options.Background && e.params.parent.IsPlayerActive(e) || (e.playerInstance.seekTo(0, !1), e.playerInstance.pauseVideo(), e.params.options.Background || e.Unmute())
            }, 500)), this.params.eventListeners && this.params.eventListeners.OnChanged && this.params.eventListeners.OnChanged()
        }, o.prototype.OnPaused = function() {
            this.params.eventListeners && this.params.eventListeners.OnPaused && this.params.eventListeners.OnPaused()
        }, o.prototype.OnStopped = function() {
            this.params.eventListeners && this.params.eventListeners.OnStopped && this.params.eventListeners.OnStopped()
        }, o.prototype.OnFinished = function() {
            this.params.options.Background || this.params.parent.ControlsPaused(), this.params.eventListeners && this.params.eventListeners.OnFinished && this.params.eventListeners.OnFinished()
        }, o.prototype.OnLoading = function() {
            this.params.eventListeners && this.params.eventListeners.OnLoading && this.params.eventListeners.OnLoading()
        }, o.prototype.OnReady = function() {
            this._autoplayed === i.INITIAL && (this.Mute(), this._autoplayed = i.TRIGGERED, this.playerInstance.seekTo(0, !1), this.playerInstance.playVideo()), this.params.eventListeners && this.params.eventListeners.OnReady && this.params.eventListeners.OnReady()
        }, o.prototype.OnError = function(t) {
            s(this._playerId + ": %c" + t, e.ERROR, this._debugConsoleColor), this.params.eventListeners && this.params.eventListeners.OnError && this.params.eventListeners.OnError(t)
        }, o.prototype.OnFocused = function() {
            this.params.options.Background && this.Play()
        }, o.prototype.GetStatus = function() {
            var e = this;
            return function() {
                switch (e.playerInstance.getPlayerState()) {
                    case YT.PlayerState.PLAYING:
                        return t.PLAYING;
                    case YT.PlayerState.BUFFERING:
                        return t.LOADING;
                    case YT.PlayerState.PAUSED:
                        return t.PAUSED;
                    case YT.PlayerState.UNSTARTED:
                    case YT.PlayerState.CUED:
                        return t.READY;
                    case YT.PlayerState.ENDED:
                        return t.FINISHED
                }
            }()
        }, o.prototype.GetOptions = function() {
            return this.params.options
        }, o.prototype.Play = function() {
            n.prototype.GetInitialized.call(this) ? this.playerInstance.playVideo() : s(this._playerId + ": %cPlayer not initialized", e.ERROR, this._debugConsoleColor)
        }, o.prototype.Pause = function() {
            n.prototype.GetInitialized.call(this) ? this.playerInstance.pauseVideo() : s(this._playerId + ": %cPlayer not initialized", e.ERROR, this._debugConsoleColor)
        }, o.prototype.Stop = function() {
            n.prototype.GetInitialized.call(this) ? this.playerInstance.stopVideo() : s(this._playerId + ": %cPlayer not initialized", e.ERROR, this._debugConsoleColor)
        }, o.prototype.Mute = function() {
            n.prototype.GetInitialized.call(this) ? this.playerInstance.mute() : s(this._playerId + ": %cPlayer not initialized", e.ERROR, this._debugConsoleColor)
        }, o.prototype.Unmute = function() {
            n.prototype.GetInitialized.call(this) ? this.playerInstance.unMute() : s(this._playerId + ": %cPlayer not initialized", e.ERROR, this._debugConsoleColor)
        }, o.prototype.Focus = function() {
            n.prototype.GetInitialized.call(this) ? this.OnFocused() : s(this._playerId + ": %cPlayer not initialized", e.ERROR, this._debugConsoleColor)
        }, o.prototype.GetId = function() {
            return this._playerId
        }, o.prototype.GetRandomPlayerId = function() {
            return "btyt-" + a.GetUniqueRandomNubmer(1e4)
        }, o
    }(n),
    d = function(i) {
        function n(e) {
            var n = i.call(this) || this;
            n.params = e, n.params.options || (n.params.options = {
                Background: !1
            }), n._autoplayPrevented = !1, n._skipAutoplayPrevention = !1;
            var s = a.GetUniqueRandomNubmer(100).toString();
            return n._debugConsoleColor = "rgb(" + s + ", 200, " + s + ")", n._status = t.INITIAL, n._playerId = n.GetRandomPlayerId(), n.params.container.attr("id", n._playerId), n
        }
        return r(n, i), n.prototype.Initialize = function() {
            i.prototype.Initialize.call(this);
            var t = this,
                n = this.params.url.match(/vimeo\.com\/(.+)$/i);
            if (this.params.url && n && 0 !== n.length) {
                this.playerInstance = new Vimeo.Player(this.params.container.attr("id"), {
                    background: !0,
                    autoplay: !1,
                    portrait: !1,
                    title: !1,
                    byline: !1,
                    fun: !1,
                    autopause: !0
                }), this.params.options.Background && this.playerInstance.setLoop(!0), this.playerInstance.on("bufferstart", function() {
                    t.OnLoading(), t.OnChanged()
                }), this.playerInstance.on("bufferend", function() {
                    t.OnChanged()
                }), this.playerInstance.on("play", function() {
                    if (!t._skipAutoplayPrevention && !t.params.options.Background && !t._autoplayPrevented) return t.playerInstance.pause(), void(t._autoplayPrevented = !0);
                    t.OnStarted(), t.OnChanged()
                }), this.playerInstance.on("pause", function() {
                    t.OnPaused(), t.OnChanged()
                }), this.playerInstance.on("ended", function() {
                    t.OnFinished(), t.OnChanged()
                }), this.playerInstance.on("loaded", function() {
                    t.OnChanged()
                }), this.playerInstance.on("error", function(e) {
                    t.OnError(e), t.OnChanged()
                }), this.playerInstance.ready().then(function() {
                    t.OnReady()
                }), i.prototype.SetInitialized.call(this)
            } else s(this._playerId + ": %cCould not parse a valid Vimeo video ID.", e.WARNING, this._debugConsoleColor)
        }, n.prototype.OnStarted = function() {
            this._status = t.PLAYING, this.params.eventListeners && this.params.eventListeners.OnStarted && this.params.eventListeners.OnStarted()
        }, n.prototype.OnChanged = function() {
            this.params.eventListeners && this.params.eventListeners.OnChanged && this.params.eventListeners.OnChanged()
        }, n.prototype.OnPaused = function() {
            this._status = t.PAUSED, this.params.eventListeners && this.params.eventListeners.OnPaused && this.params.eventListeners.OnPaused()
        }, n.prototype.OnStopped = function() {
            throw new Error("Not supported")
        }, n.prototype.OnFinished = function() {
            this._status = t.FINISHED, this.params.options.Background || this.params.parent.ControlsPaused(), this.params.eventListeners && this.params.eventListeners.OnFinished && this.params.eventListeners.OnFinished()
        }, n.prototype.OnLoading = function() {
            this._status = t.LOADING, this.params.eventListeners && this.params.eventListeners.OnLoading && this.params.eventListeners.OnLoading()
        }, n.prototype.OnReady = function() {
            this._status = t.READY, this.params.options.Background && this.Mute()
        }, n.prototype.OnError = function(t) {
            s(this._playerId + ": %c" + t, e.ERROR, this._debugConsoleColor), this.params.eventListeners && this.params.eventListeners.OnError && this.params.eventListeners.OnError(t)
        }, n.prototype.OnFocused = function() {
            this.params.options.Background && (this._skipAutoplayPrevention = !1, this.playerInstance.play())
        }, n.prototype.GetStatus = function() {
            return this._status
        }, n.prototype.GetOptions = function() {
            return this.params.options
        }, n.prototype.Play = function() {
            i.prototype.GetInitialized.call(this) ? (this._skipAutoplayPrevention = !0, this.playerInstance.play()) : s(this._playerId + ": %cPlayer not initialized", e.ERROR, this._debugConsoleColor)
        }, n.prototype.Pause = function() {
            i.prototype.GetInitialized.call(this) ? this.playerInstance.pause() : s(this._playerId + ": %cPlayer not initialized", e.ERROR, this._debugConsoleColor)
        }, n.prototype.Stop = function() {
            i.prototype.GetInitialized.call(this) ? (this.playerInstance.setCurrentTime(0), this.playerInstance.pause()) : s(this._playerId + ": %cPlayer not initialized", e.ERROR, this._debugConsoleColor)
        }, n.prototype.Mute = function() {
            i.prototype.GetInitialized.call(this) ? this.playerInstance.setVolume(0) : s(this._playerId + ": %cPlayer not initialized", e.ERROR, this._debugConsoleColor)
        }, n.prototype.Unmute = function() {
            i.prototype.GetInitialized.call(this) ? this.playerInstance.setVolume(1) : s(this._playerId + ": %cPlayer not initialized", e.ERROR, this._debugConsoleColor)
        }, n.prototype.Focus = function() {
            i.prototype.GetInitialized.call(this) ? this.OnFocused() : s(this._playerId + ": %cPlayer not initialized", e.ERROR, this._debugConsoleColor)
        }, n.prototype.GetId = function() {
            return this._playerId
        }, n.prototype.GetRandomPlayerId = function() {
            return "btvo-" + a.GetUniqueRandomNubmer(1e4)
        }, n
    }(n),
    p = function(i) {
        function n(e) {
            var n = i.call(this) || this;
            n.params = e, n.params.options || (n.params.options = {
                Background: !1
            });
            var s = a.GetUniqueRandomNubmer(150).toString();
            return n._debugConsoleColor = "rgb(" + s + ", " + s + ", 255)", n._status = t.INITIAL, n._playerId = n.GetRandomPlayerId(), n.params.container.attr("id", n._playerId), n
        }
        return r(n, i), n.prototype.Initialize = function() {
            var t = this;
            i.prototype.Initialize.call(this), "video" === this.params.container[0].tagName.toLowerCase() ? (this.params.container.attr("playsinline", ""), this.playerInstance = this.params.container[0], this.playerInstance.controls = !1, this.playerInstance.loop = !1, this.playerInstance.muted = !1, this.playerInstance.autoplay = !1, this.params.options.Background && (this.playerInstance.loop = !0, this.playerInstance.muted = !0, this.params.parent.IsPlayerActive(this) && (this.playerInstance.autoplay = !0)), this.playerInstance.onplay = function() {
                return t.OnStarted()
            }, this.playerInstance.onpause = function() {
                return t.OnPaused()
            }, this.playerInstance.onabort = function() {
                return t.OnStopped()
            }, this.playerInstance.onended = function() {
                return t.OnFinished()
            }, this.playerInstance.onloadstart = function() {
                return t.OnLoading()
            }, this.playerInstance.oncanplay = function() {
                return t.OnReady()
            }, this.playerInstance.onerror = function() {
                return t.OnError(t.playerInstance.error.message)
            }, i.prototype.SetInitialized.call(this)) : s(this._playerId + ": %cThis is not a valid HTML5 video element.", e.ERROR, this._debugConsoleColor)
        }, n.prototype.OnStarted = function() {
            this._status = t.PLAYING, this.params.eventListeners && this.params.eventListeners.OnStarted && this.params.eventListeners.OnStarted()
        }, n.prototype.OnChanged = function() {
            this.params.eventListeners && this.params.eventListeners.OnChanged && this.params.eventListeners.OnChanged()
        }, n.prototype.OnPaused = function() {
            this._status = t.PAUSED, this.params.eventListeners && this.params.eventListeners.OnPaused && this.params.eventListeners.OnPaused()
        }, n.prototype.OnStopped = function() {
            this._status = t.STOPPED, this.params.eventListeners && this.params.eventListeners.OnPaused && this.params.eventListeners.OnStopped()
        }, n.prototype.OnFinished = function() {
            this._status = t.FINISHED, this.params.options.Background || this.params.parent.ControlsPaused(), this.params.eventListeners && this.params.eventListeners.OnFinished && this.params.eventListeners.OnFinished()
        }, n.prototype.OnLoading = function() {
            this._status = t.LOADING, this.params.eventListeners && this.params.eventListeners.OnLoading && this.params.eventListeners.OnLoading()
        }, n.prototype.OnReady = function() {
            this._status = t.READY, this.params.eventListeners && this.params.eventListeners.OnReady && this.params.eventListeners.OnReady()
        }, n.prototype.OnError = function(t) {
            s(this._playerId + ": %c" + t, e.ERROR, this._debugConsoleColor), this.params.eventListeners && this.params.eventListeners.OnError && this.params.eventListeners.OnError(t)
        }, n.prototype.OnFocused = function() {
            this.params.options.Background && this.Play()
        }, n.prototype.GetStatus = function() {
            return this._status
        }, n.prototype.GetOptions = function() {
            return this.params.options
        }, n.prototype.Play = function() {
            i.prototype.GetInitialized.call(this) ? this.playerInstance.play() : s(this._playerId + ": %cPlayer not initialized", e.ERROR, this._debugConsoleColor)
        }, n.prototype.Pause = function() {
            i.prototype.GetInitialized.call(this) ? this.playerInstance.pause() : s(this._playerId + ": %cPlayer not initialized", e.ERROR, this._debugConsoleColor)
        }, n.prototype.Stop = function() {
            i.prototype.GetInitialized.call(this) ? (this.playerInstance.currentTime = 0, this.playerInstance.pause(), this.OnStopped()) : s(this._playerId + ": %cPlayer not initialized", e.ERROR, this._debugConsoleColor)
        }, n.prototype.Mute = function() {
            i.prototype.GetInitialized.call(this) ? this.playerInstance.volume = 0 : s(this._playerId + ": %cPlayer not initialized", e.ERROR, this._debugConsoleColor)
        }, n.prototype.Unmute = function() {
            i.prototype.GetInitialized.call(this) ? this.playerInstance.volume = 1 : s(this._playerId + ": %cPlayer not initialized", e.ERROR, this._debugConsoleColor)
        }, n.prototype.Focus = function() {
            i.prototype.GetInitialized.call(this) ? this.OnFocused() : s(this._playerId + ": %cPlayer not initialized", e.ERROR, this._debugConsoleColor)
        }, n.prototype.GetId = function() {
            return this._playerId
        }, n.prototype.GetRandomPlayerId = function() {
            return "bthtml5video-" + a.GetUniqueRandomNubmer(1e4)
        }, n
    }(n);
! function(t) {
    t[t.YOUTUBE = 0] = "YOUTUBE", t[t.VIMEO = 1] = "VIMEO", t[t.HTML5VIDEO = 2] = "HTML5VIDEO"
}(o || (o = {}));
var onYouTubeIframeAPIReady, Biltorvet, h = function() {
        function t() {}
        return t.getInstance = function(t, e) {
            switch (t) {
                case o.YOUTUBE:
                    return new l(e);
                case o.VIMEO:
                    return new d(e);
                case o.HTML5VIDEO:
                    return new p(e);
                default:
                    return null
            }
        }, t
    }(),
    c = function() {
        function t() {
            this._players = [], this._libraryLoadRequestedForPlayerTypes = [], this._players = []
        }
        return Object.defineProperty(t, "Instance", {
            get: function() {
                return new this
            },
            enumerable: !0,
            configurable: !0
        }), t.prototype.LoadDependencies = function(t, i) {
            var n = this;
            for (var a in void 0 === i && (i = !0), this._players = t, this._players)
                if (!(this._players[a] instanceof p)) {
                    var r, h;
                    if (this._players[a] instanceof l && -1 === this._libraryLoadRequestedForPlayerTypes.indexOf(o.YOUTUBE))(r = document.createElement("script")).async = !0, r.src = "https://www.youtube.com/iframe_api", (h = document.getElementsByTagName("script")[0]).parentNode.insertBefore(r, h), this._libraryLoadRequestedForPlayerTypes.push(o.YOUTUBE);
                    if (this._players[a] instanceof d && -1 === this._libraryLoadRequestedForPlayerTypes.indexOf(o.VIMEO))(r = document.createElement("script")).async = !0, r.src = "https://player.vimeo.com/api/player.js", (h = document.getElementsByTagName("script")[0]).parentNode.insertBefore(r, h), this._libraryLoadRequestedForPlayerTypes.push(o.VIMEO)
                } if (i) {
                if ("file:" === window.location.protocol) s("YouTube can not be controlled from a file system. Load this page online for YouTube support.", e.ERROR);
                else {
                    var c = null;
                    onYouTubeIframeAPIReady && (c = onYouTubeIframeAPIReady), onYouTubeIframeAPIReady = function() {
                        n.InitializeAllOfType(o.YOUTUBE), null !== c && c()
                    }
                }
                this.VimeoLoaded(function() {
                    return n.InitializeAllOfType(o.VIMEO)
                }), this.InitializeAllOfType(o.HTML5VIDEO)
            }
        }, t.prototype.InitializeAllOfType = function(t) {
            if (this._players && 0 !== this._players.length)
                for (var i in this._players)(t !== o.YOUTUBE || this._players[i] instanceof l) && (t !== o.VIMEO || this._players[i] instanceof d) && (t !== o.HTML5VIDEO || this._players[i] instanceof p) && this._players[i].Initialize();
            else s("No players to initialize.", e.WARNING)
        }, t.prototype.VimeoLoaded = function(t) {
            var e = this;
            "undefined" != typeof Vimeo && Vimeo ? t() : setTimeout(function() {
                return e.VimeoLoaded(t)
            }, 200)
        }, t
    }();
! function(Biltorvet) {
    var Slideshow = function() {
        function Slideshow(t, e) {
            void 0 === e && (e = null), this.lastClick = null, this.slideshowInterval = null, this.players = [], this.isMouseOver = !1, this.isVideoPlaying = !1, this.resumeAutoplayTimeout = null, this.mouseMoveFrameSkip = null, this.controlsHidden = !1, this.hideControlsAfterInactivity = null, this.Started = 0, this._activeSlideIndex = -1;
            var i = this;
            i.container = t, this.options = {
                SkipAnimationIfChangeLessThan: e && void 0 !== e.SkipAnimationIfChangeLessThan ? e.SkipAnimationIfChangeLessThan : 1e3,
                AutoplayInterval: e && void 0 !== e.AutoplayInterval ? e.AutoplayInterval : 5e3,
                ResumeAutoplayWhenInactiveFor: !(!e || void 0 === e.ResumeAutoplayWhenInactiveFor) && e.ResumeAutoplayWhenInactiveFor,
                TransitionDuration: e && void 0 !== e.TransitionDuration ? e.TransitionDuration : 500,
                TransitionType: e && void 0 !== e.TransitionType ? e.TransitionType : "fade",
                AllowFullscreen: !e || void 0 === e.AllowFullscreen || e.AllowFullscreen,
                ShowThumbnails: !(!e || void 0 === e.ShowThumbnails) && e.ShowThumbnails,
                HideControlsAfterInactivity: e && void 0 !== e.HideControlsAfterInactivity ? e.HideControlsAfterInactivity : 2e3
            }, jQuery(function(e) {
                i.$ = e, 0 !== t.length && (i.container.attr("id") || i.container.attr("id", "bt-slideshow-" + (new Date).getTime()), i._activeSlideIndex = 0, 0 === i.container.find(".bt-slideshow-open-fullscreen").length && (i.options.AllowFullscreen = !1), i.options.ShowThumbnails || i.container.find(".bt-slideshow-thumbnails").remove(), i.options.AutoplayInterval && i.StartAutoPlay(), i.InitializeVideo(), i.InitializeMobileTouch(), i.BindEvents(), i.SetTransitionDuration(), i.UpdateSlidesCount(), i.CenterActiveThumbnail(), i.container.find(".bt-slideshow-viewport>div,.bt-slideshow-viewport>img").length <= 1 && i.container.find(".bt-slideshow-next,.bt-slideshow-prev").addClass("d-none"))
            })
        }
        return Slideshow.prototype.InitializeMobileTouch = function() {
            var t = this;
            if ("undefined" != typeof Hammer) {
                t.container.find(".bt-slideshow-skidboard").removeClass("d-none");
                var i = new Hammer(t.container.find(".bt-slideshow-skidboard")[0]);
                i.get("swipe").set({
                    direction: Hammer.DIRECTION_HORIZONTAL
                }), i.on("swipeleft", function(e) {
                    t.NextSlide()
                }), i.on("swiperight", function(e) {
                    t.PrevSlide()
                }), i.on("tap", function(e) {
                    t.SkidBoardIsNextClicked(e.center.x, e.center.y) || t.SkidBoardIsPrevClicked(e.center.x, e.center.y) || t.SkidBoardIsFullscreenClicked(e.center.x, e.center.y) || t.SkidBoardIsThumbClicked(e.center.x, e.center.y) || t.SkidBoardClickInActiveSlide(e.center.x, e.center.y) || t.ToggleFullscreen()
                })
            } else s("BT Slideshow: Hammer library not loaded. Mobile gestures disabled.", e.WARNING)
        }, Slideshow.prototype.InitializeVideo = function() {
            var t = this; - 1 === navigator.userAgent.indexOf("MSIE") ? (-1 !== navigator.userAgent.indexOf("15E148") && t.$("html").addClass("bt-slideshow-iphonexs"), t.container.find(".bt-slideshow-video").length > 0 && t.container.find(".bt-slideshow-video").each(function() {
                var i = $(this).index(),
                    n = $(t.$(this).find(".bt-videoplaceholder"));
                if (n.attr("data-youtube-id")) {
                    var a = {
                        $: t.$,
                        container: n,
                        parent: t,
                        url: n.attr("data-youtube-id"),
                        options: {
                            Background: n.data("bgmode")
                        }
                    };
                    t.players[i] = h.getInstance(o.YOUTUBE, a)
                } else if (n.attr("data-vimeo-id")) {
                    a = {
                        $: t.$,
                        container: n,
                        parent: t,
                        url: n.attr("data-vimeo-id"),
                        options: {
                            Background: n.data("bgmode")
                        }
                    };
                    t.players[i] = h.getInstance(o.VIMEO, a)
                } else if (n.find("source").length > 0) {
                    a = {
                        $: t.$,
                        container: n,
                        parent: t,
                        url: null,
                        options: {
                            Background: n.data("bgmode")
                        }
                    };
                    t.players[i] = h.getInstance(o.HTML5VIDEO, a)
                } else s("Could not find a compatible player interface.", e.WARNING)
            }), c.Instance.LoadDependencies(t.players)) : t.container.find(".bt-slideshow-video").each(function() {
                t.$(this).find(".bt-slideshow-playpause").remove(), t.$(this).append('<div class="ieNotSupported"><p><i class="bticon bticon-Stop"></i> Din browser er forÃ¦ldet, og kan ikke afspille videoen.<br/><a href="https://www.google.com/chrome/">Opgradere venligst din browser.</a></p></div>')
            })
        }, Slideshow.prototype.StartAutoPlay = function() {
            var t = this;
            clearInterval(t.slideshowInterval), t.isVideoPlaying || t.isMouseOver || !t.options.AutoplayInterval || t.container.find(".bt-slideshow-viewport>*").length <= 1 || (t.slideshowInterval = setInterval(function() {
                return t.NextSlide(!1)
            }, t.options.AutoplayInterval))
        }, Slideshow.prototype.OpenFullscreen = function() {
            var t = this;
            t.options.AllowFullscreen && (t.$("html").hasClass("bt-slideshow-fullscreen") || (t.$("html").addClass("bt-slideshow-fullscreen"), t.container.addClass("bt-slideshow-open").find(".bt-slideshow-open-fullscreen .bticon").removeClass("bticon-GalleryFullscreen").addClass("bticon-Close").end().parents().each(function() {
                t.$(this).addClass("bt-slideshow-breadcrumbs-to-slideshow")
            })), t.StopSlideshow())
        }, Slideshow.prototype.CloseFullscreen = function() {
            this.$("html").hasClass("bt-slideshow-fullscreen") && (this.$(".bt-slideshow-open").removeClass("bt-slideshow-open"), this.$(".bt-slideshow-breadcrumbs-to-slideshow").removeClass("bt-slideshow-breadcrumbs-to-slideshow"), this.$("html").removeClass("bt-slideshow-fullscreen"), this.container.find(".bt-slideshow-open-fullscreen .bticon").removeClass("bticon-Close").addClass("bticon-GalleryFullscreen").end()), this.StopSlideshow(), this.ResumeSlideshowAfterInactivity()
        }, Slideshow.prototype.ToggleFullscreen = function() {
            this.$("html").hasClass("bt-slideshow-fullscreen") ? this.CloseFullscreen() : this.OpenFullscreen()
        }, Slideshow.prototype.PrevSlide = function(t) {
            void 0 === t && (t = !0), this.MoveSlide(-1, "prev", t)
        }, Slideshow.prototype.NextSlide = function(t) {
            void 0 === t && (t = !0), this.MoveSlide(-1, "next", t)
        }, Slideshow.prototype.VideoPlayerTogglePlayback = function() {
            this.players[this.GetActiveSlideIndex()].GetStatus() !== t.PLAYING ? this.VideoPlayerStartPlayback() : this.VideoPlayerPausePlayback()
        }, Slideshow.prototype.VideoPlayerStopPlayback = function() {
            this.players[this.GetActiveSlideIndex()].Stop(), this.isVideoPlaying = !1, this.ResumeSlideshowAfterInactivity(), this.ControlsPaused()
        }, Slideshow.prototype.VideoPlayerPausePlayback = function() {
            this.players[this.GetActiveSlideIndex()].Pause(), this.isVideoPlaying = !1, this.ResumeSlideshowAfterInactivity(), this.ControlsPaused()
        }, Slideshow.prototype.VideoPlayerStartPlayback = function() {
            this.players[this.GetActiveSlideIndex()].GetOptions().Background || this.players[this.GetActiveSlideIndex()].Unmute(), this.players[this.GetActiveSlideIndex()].Play(), this.isVideoPlaying = !0, this.StopSlideshow(), this.ControlsPlaying()
        }, Slideshow.prototype.VideoPlayerStopStartPlayback = function() {
            this.VideoPlayerStopPlayback(), this.VideoPlayerStartPlayback()
        }, Slideshow.prototype.GetActiveSlideIndex = function() {
            return this._activeSlideIndex
        }, Slideshow.prototype.IsPlayerActive = function(t) {
            for (var e in this.players)
                if (this.players[e] === t) return this.container.find(".bt-slideshow-video:nth-child(" + (e + 1) + ")").hasClass("bt-slideshow-active");
            return !1
        }, Slideshow.prototype.ControlsPaused = function() {
            this.container.removeClass("bt-video-playing"), this.container.find(".bt-slideshow-active .bt-slideshow-playpause .bticon").removeClass("bticon-Pause").addClass("bticon-Play"), this.ControlsShow()
        }, Slideshow.prototype.ControlsPlaying = function() {
            this.container.addClass("bt-video-playing"), this.container.find(".bt-slideshow-active .bt-slideshow-playpause .bticon").removeClass("bticon-Play").addClass("bticon-Pause"), this.ControlsHide()
        }, Slideshow.prototype.ControlsHide = function() {
            this.container.addClass("bt-controls-hidden"), this.controlsHidden = !0
        }, Slideshow.prototype.ControlsShow = function() {
            this.container.removeClass("bt-controls-hidden"), this.controlsHidden = !1
        }, Slideshow.prototype.IsOverElement = function(t, e, i) {
            var n = document.body.scrollTop || document.documentElement.scrollTop,
                s = t.offset(),
                o = s.top - n,
                a = t.outerWidth(),
                r = t.outerHeight();
            return e > s.left && e < s.left + a && i > o && i < o + r
        }, Slideshow.prototype.SkidBoardIsHoveringOverActiveElement = function(t, e) {
            var i = this,
                n = !1;
            return i.container.find(".bt-slideshow-thumbnails a, .bt-slideshow-next, .bt-slideshow-prev, .bt-slideshow-open-fullscreen,.bt-slideshow-active a:visible").each(function() {
                i.IsOverElement(i.$(this), t, e) && (n = !0)
            }), n
        }, Slideshow.prototype.SkidBoardClickInActiveSlide = function(t, e) {
            var i = this,
                n = !1;
            return i.container.find(".bt-slideshow-active a:visible").each(function() {
                if (i.IsOverElement(i.$(this), t, e)) {
                    n = !0;
                    var s = i.$(this).attr("href");
                    return s && "#" !== s ? void(window.location.href = s) : void i.$(this).trigger("click")
                }
            }), n
        }, Slideshow.prototype.SkidBoardIsThumbClicked = function(t, e) {
            var i = this,
                n = !1;
            return i.container.find(".bt-slideshow-thumbnails a").each(function() {
                if (i.IsOverElement(i.$(this), t, e)) return i.$(this).trigger("click"), void(n = !0)
            }), n
        }, Slideshow.prototype.SkidBoardIsNextClicked = function(t, e) {
            var i = this.container.find(".bt-slideshow-next");
            return !!this.IsOverElement(i, t, e) && (this.NextSlide(), !0)
        }, Slideshow.prototype.SkidBoardIsPrevClicked = function(t, e) {
            var i = this.container.find(".bt-slideshow-prev");
            return !!this.IsOverElement(i, t, e) && (this.PrevSlide(), !0)
        }, Slideshow.prototype.SkidBoardIsFullscreenClicked = function(t, e) {
            var i = this.container.find(".bt-slideshow-open-fullscreen");
            return 0 !== i.length && (!!this.IsOverElement(i, t, e) && (i.trigger("click"), !0))
        }, Slideshow.prototype.CenterActiveThumbnail = function() {
            if (this.options.ShowThumbnails) {
                var t = this.container.find(".bt-slideshow-thumbnail-active");
                if (0 !== t.length) {
                    var e = t.parent(),
                        i = t.outerWidth() + parseInt(t.css("marginLeft")) + parseInt(t.css("marginRight"));
                    if (e.width() <= this.container.width()) return e.css("marginLeft", "unset"), void(e.parent().hasClass("text-center") || e.parent().addClass("text-center"));
                    e.parent().hasClass("text-center") && e.parent().removeClass("text-center");
                    var n = Math.floor(t[0].offsetLeft - parseInt(t.css("marginLeft")) - this.container.outerWidth() / 2 + i / 2);
                    e.css("marginLeft", -1 * n)
                }
            }
        }, Slideshow.prototype.MoveSlide = function(i, n, o) {
            void 0 === o && (o = !0);
            var a = this;
            for (var r in o && (a.StopSlideshow(), a.ResumeSlideshowAfterInactivity()), a.container.find(".bt-slideshow-pause-video").addClass("d-none"), a.players) try {
                a.players[r].GetStatus() === t.PLAYING && a.players[r].Pause()
            } catch (t) {
                s(a.players[r].GetId() + ": Could not pause this player." + t, e.WARNING)
            }
            a.container.find(".bt-slideshow-viewport").each(function() {
                var t = null,
                    e = !1;
                null != a.lastClick && ((new Date).getTime() - a.lastClick.getTime() < a.options.SkipAnimationIfChangeLessThan && (e = !0));
                a.lastClick = new Date;
                var s = a.$(this).find(">.bt-slideshow-transitioning");
                t = s.length > 0 ? s.siblings(".bt-slideshow-active").removeClass("bt-slideshow-active").end().removeClass("bt-slideshow-transitioning").addClass("bt-slideshow-active") : a.$(this).find(">.bt-slideshow-active");
                var o = null,
                    r = null,
                    l = null,
                    d = null,
                    p = null,
                    h = null; - 1 !== i ? (0 === (d = (l = a.$(this).find(">:nth-child(" + i + ")")).next()).length && (d = a.$(this).find(">:first")), 0 === (p = d.next()).length && (p = a.$(this).find(">:first")), 0 === (o = l.prev()).length && (o = a.$(this).find(">:last")), 0 === (r = o.prev()).length && (r = a.$(this).find(">:last"))) : "prev" === n ? (0 === (l = a.$(this).find(">.bt-slideshow-active").prev()).length && (l = a.$(this).find(">:last")), 0 === (d = l.prev()).length && (d = a.$(this).find(">:last")), 0 === (p = d.prev()).length && (p = a.$(this).find(">:last")), 0 === (h = p.prev()).length && (h = a.$(this).find(">:last"))) : (0 === (l = a.$(this).find(">.bt-slideshow-active").next()).length && (l = a.$(this).find(">:first")), 0 === (d = l.next()).length && (d = a.$(this).find(">:first")), 0 === (p = d.next()).length && (p = a.$(this).find(">:first")), 0 === (h = p.next()).length && (h = a.$(this).find(">:first"))), l.index() != t.index() && (a.container.find(".bt-slideshow-current").text(l.index() + 1), a.options.ShowThumbnails && (a.container.find(".bt-slideshow-thumbnails li:nth-child(" + (l.index() + 1) + ")").addClass("bt-slideshow-thumbnail-active").siblings().removeClass("bt-slideshow-thumbnail-active"), setTimeout(function() {
                    return a.CenterActiveThumbnail()
                }, 500)), a._activeSlideIndex = l.index(), e ? l.siblings(".bt-slideshow-active").removeClass("bt-slideshow-active").end().addClass("bt-slideshow-active") : l.one("webkitAnimationEnd animationend", function() {
                    a.$(this).siblings(".bt-slideshow-active").removeClass("bt-slideshow-active").end().removeClass("bt-slideshow-transitioning").addClass("bt-slideshow-active"), a.players[a.GetActiveSlideIndex()] && (a.players[a.GetActiveSlideIndex()].GetOptions().Background ? a.container.addClass("bt-bgvideoactive") : a.container.removeClass("bt-bgvideoactive"), a.players[a.GetActiveSlideIndex()].Focus())
                }).addClass("bt-slideshow-transitioning"), null !== o && "none" === o.css("display") && o.css("display", ""), null !== r && "none" === r.css("display") && r.css("display", ""), null !== l && "none" === l.css("display") && l.css("display", ""), null !== d && "none" === d.css("display") && d.css("display", ""), null !== p && "none" === p.css("display") && p.css("display", ""), null !== h && "none" === h.css("display") && h.css("display", ""))
            })
        }, Slideshow.prototype.StopSlideshow = function() {
            clearInterval(this.slideshowInterval), this.slideshowInterval = null, this.resumeAutoplayTimeout && (clearTimeout(this.resumeAutoplayTimeout), this.resumeAutoplayTimeout = null)
        }, Slideshow.prototype.ResumeSlideshowAfterInactivity = function() {
            var t = this;
            t.options.ResumeAutoplayWhenInactiveFor && (t.resumeAutoplayTimeout = setTimeout(function() {
                return t.StartAutoPlay()
            }, t.options.ResumeAutoplayWhenInactiveFor))
        }, Slideshow.prototype.SetTransitionDuration = function() {
            this.$("body").append('<style type="text/css">html ' + this.container.attr("id") + ".bt-slideshow-transitioning{animation-duration: " + this.options.TransitionDuration + "ms !important;}</style>")
        }, Slideshow.prototype.UpdateSlidesCount = function() {
            this.container.find(".bt-slideshow-count").text(this.container.find(".bt-slideshow-viewport>*").length)
        }, Slideshow.prototype.BindEvents = function() {
            var e = this;
            e.$(window).one("load", function(i) {
                e.players && e.players.length > 0 && 0 === e.GetActiveSlideIndex() && e.players[0].GetOptions().Background && (e.container.addClass("bt-bgvideoactive"), e.players[0].GetStatus() !== t.PLAYING && e.players[0].Play())
            }).on("resize", function(t) {
                e.CenterActiveThumbnail()
            }), e.$(document).on("mouseenter", "#" + e.container.attr("id"), function(t) {
                e.isMouseOver = !0, e.StopSlideshow()
            }).on("mouseleave", "#" + e.container.attr("id"), function(t) {
                e.isMouseOver = !1, e.ResumeSlideshowAfterInactivity(), clearTimeout(e.hideControlsAfterInactivity), e.container.hasClass("bt-video-playing") ? e.ControlsHide() : e.ControlsShow()
            }).on("mousemove", "#" + e.container.attr("id"), function(t) {
                var i = this;
                clearTimeout(e.mouseMoveFrameSkip), clearTimeout(e.hideControlsAfterInactivity), e.controlsHidden && e.ControlsShow(), e.hideControlsAfterInactivity = setTimeout(function() {
                    !e.isVideoPlaying && e.SkidBoardIsHoveringOverActiveElement(t.clientX, t.clientY) || e.ControlsHide()
                }, e.options.HideControlsAfterInactivity), e.mouseMoveFrameSkip = setTimeout(function() {
                    e.SkidBoardIsHoveringOverActiveElement(t.clientX, t.clientY) ? e.$(i).css("cursor", "pointer") : e.$(i).css("cursor", "default")
                }, 60)
            }).on("keydown", function(t) {
                e.isMouseOver && (37 == t.keyCode && (t.preventDefault(), e.PrevSlide()), 38 == t.keyCode && (t.preventDefault(), e.OpenFullscreen()), 39 == t.keyCode && (t.preventDefault(), e.NextSlide()), 40 == t.keyCode && (t.preventDefault(), e.CloseFullscreen()), 32 == t.keyCode && (t.preventDefault(), e.VideoPlayerTogglePlayback()))
            }).on("click", "#" + e.container.attr("id") + " .bt-slideshow-prev", function(t) {
                t.preventDefault(), e.PrevSlide()
            }).on("click", "#" + e.container.attr("id") + " .bt-slideshow-next", function(t) {
                t.preventDefault(), e.NextSlide()
            }).on("click", "#" + e.container.attr("id") + " .bt-slideshow-pause-video", function() {
                e.VideoPlayerPausePlayback()
            }).on("click", "#" + e.container.attr("id") + " .bt-slideshow-playpause", function() {
                e.Started > 0 ? $(this).find(".bticon-Pause").length > 0 ? e.VideoPlayerPausePlayback() : e.VideoPlayerStartPlayback() : (e.Started++, e.VideoPlayerStopStartPlayback())
            }).on("click", "#" + e.container.attr("id") + " .bt-slideshow-thumbnails a", function(t) {
                t.preventDefault(), e.MoveSlide(e.$(this).closest("li").index() + 1, "next")
            }).on("click", "#" + e.container.attr("id") + " .bt-slideshow-open-fullscreen", function(t) {
                t.preventDefault(), e.ToggleFullscreen()
            })
        }, Slideshow
    }();
    Biltorvet.Slideshow = Slideshow
}(Biltorvet || (Biltorvet = {})), jQuery(function(t) {
    t(".bt-slideshow").each(function() {
        new Biltorvet.Slideshow(t(this), {
            AutoplayInterval: ("number" != typeof t(this).data("allowautoplay") || 0 !== t(this).data("allowautoplay")) && ("number" == typeof t(this).data("autoplayinterval") ? t(this).data("autoplayinterval") : 5e3),
            SkipAnimationIfChangeLessThan: "number" == typeof t(this).data("skipanimationifchangelessthan") ? t(this).data("skipanimationifchangelessthan") : 1e3,
            ResumeAutoplayWhenInactiveFor: ("number" != typeof t(this).data("allowresumeautoplayafterinactivity") || 0 !== t(this).data("allowresumeautoplayafterinactivity")) && ("number" == typeof t(this).data("resumeautoplaywheninactivefor") && t(this).data("resumeautoplaywheninactivefor")),
            TransitionDuration: "number" == typeof t(this).data("transitionduration") ? t(this).data("transitionduration") : 500,
            TransitionType: "string" == typeof t(this).data("transitiontype") ? t(this).data("transitiontype") : "fade",
            AllowFullscreen: "number" != typeof t(this).data("allowfullscreen") || 1 === t(this).data("allowfullscreen"),
            ShowThumbnails: "number" == typeof t(this).data("showthumbnails") && 1 === t(this).data("showthumbnails")
        })
    })
});